<?php

/**
 * E-Store API - Digital Commerce Platform
 * PHP version 8.1
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * Comprehensive REST API for e-commerce operations including: - Product catalog management - Order processing and fulfillment - Customer relationship management - Inventory tracking - Sales analytics - Review and rating system  Supports OAuth2 authentication for secure operations. Version: Production Release 1.0
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@estore.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\PaginatedCustomers;

/**
 * PaginatedCustomersTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\PaginatedCustomers
 */
class PaginatedCustomersTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "PaginatedCustomers"
     */
    public function testPaginatedCustomers()
    {
        $testPaginatedCustomers = new PaginatedCustomers();
        $namespacedClassname = PaginatedCustomers::getModelsNamespace() . '\\PaginatedCustomers';
        $this->assertSame('\\' . PaginatedCustomers::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        self::markTestIncomplete(
            'Test of "PaginatedCustomers" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "total"
     */
    public function testPropertyTotal()
    {
        self::markTestIncomplete(
            'Test of "total" property in "PaginatedCustomers" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "page"
     */
    public function testPropertyPage()
    {
        self::markTestIncomplete(
            'Test of "page" property in "PaginatedCustomers" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "perPage"
     */
    public function testPropertyPerPage()
    {
        self::markTestIncomplete(
            'Test of "perPage" property in "PaginatedCustomers" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "totalPages"
     */
    public function testPropertyTotalPages()
    {
        self::markTestIncomplete(
            'Test of "totalPages" property in "PaginatedCustomers" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "data"
     */
    public function testPropertyData()
    {
        self::markTestIncomplete(
            'Test of "data" property in "PaginatedCustomers" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = PaginatedCustomers::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

